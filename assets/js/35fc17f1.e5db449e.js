"use strict";(self.webpackChunkdohoanghuy_github_io_docusaurus=self.webpackChunkdohoanghuy_github_io_docusaurus||[]).push([[1168],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>y});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,y=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return t?a.createElement(y,o(o({ref:n},p),{},{components:t})):a.createElement(y,o({ref:n},p))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(7294),r=t(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>v});var a=t(7462),r=t(7294),l=t(6010),o=t(2466),i=t(6550),s=t(1980),c=t(7392),p=t(12);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function m(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??u(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function d(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function y(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.k6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(a.location.search);n.set(l,e),a.replace({...a.location,search:n.toString()})}),[l,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,l=m(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:l}))),[s,c]=y({queryString:t,groupId:a}),[u,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,l]=(0,p.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:a}),b=(()=>{const e=s??u;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),f(e)}),[c,f,l]),tabValues:l}}var b=t(2389);const E={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),m=e=>{const n=e.currentTarget,t=p.indexOf(n),a=c[t].value;a!==i&&(u(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;n=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;n=p[t]??p[p.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},n)},c.map((e=>{let{value:n,label:t,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>p.push(e),onKeyDown:d,onClick:m},o,{className:(0,l.Z)("tabs__item",E.tabItem,o?.className,{"tabs__item--active":i===n})}),t??n)})))}function h(e){let{lazy:n,children:t,selectedValue:a}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function k(e){const n=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",E.tabList)},r.createElement(g,(0,a.Z)({},e,n)),r.createElement(h,(0,a.Z)({},e,n)))}function v(e){const n=(0,b.Z)();return r.createElement(k,(0,a.Z)({key:String(n)},e))}},1486:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var a=t(7462),r=(t(7294),t(3905)),l=t(4866),o=t(5162);const i={title:"Interface segregation principle",tags:["Solid"]},s="ISP - Interface segregation principle",c={unversionedId:"SOLID/interface-segregation-principle",id:"SOLID/interface-segregation-principle",title:"Interface segregation principle",description:"Abstraction & Interface",source:"@site/docs/02-SOLID/04-interface-segregation-principle.md",sourceDirName:"02-SOLID",slug:"/SOLID/interface-segregation-principle",permalink:"/docs/SOLID/interface-segregation-principle",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-SOLID/04-interface-segregation-principle.md",tags:[{label:"Solid",permalink:"/docs/tags/solid"}],version:"current",sidebarPosition:4,frontMatter:{title:"Interface segregation principle",tags:["Solid"]},sidebar:"tutorialSidebar",previous:{title:"Liskov substitution principle",permalink:"/docs/SOLID/liskov-substitution-principle"},next:{title:"Dependency inversion principle",permalink:"/docs/SOLID/dependency-inversion-principle"}},p={},u=[{value:"Abstraction &amp; Interface",id:"abstraction--interface",level:2},{value:"EMS Portal example",id:"ems-portal-example",level:3},{value:"ISP",id:"isp",level:2},{value:"Checklist",id:"checklist",level:2}],m={toc:u},d="wrapper";function y(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"isp---interface-segregation-principle"},"ISP - Interface segregation principle"),(0,r.kt)("h2",{id:"abstraction--interface"},"Abstraction & Interface"),(0,r.kt)("admonition",{title:"Abstraction",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Show what is necessary"),(0,r.kt)("p",{parentName:"admonition"},"Don't show something which is not necessary"),(0,r.kt)("p",{parentName:"admonition"},"Abstraction is the most recommend in software design. Abstraction is implemented using interface")),(0,r.kt)("admonition",{title:"Interface",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Interface specify what a class must do"),(0,r.kt)("p",{parentName:"admonition"},"Blueprint of the class"),(0,r.kt)("p",{parentName:"admonition"},"Doesn't hold the implementation of the methods, only hold the signature of the method"),(0,r.kt)("p",{parentName:"admonition"},"Play BIG ROLE in achieving Loosely Coupled Design")),(0,r.kt)("h3",{id:"ems-portal-example"},"EMS Portal example"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"apple",label:"\u274c",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/EmployeeFinances.js"',title:'"/src/EmployeeFinances.js"'},"class EmployeeRewards {\n    public CalculateRewards(Employee emp) {\n      return 100;\n    }\n}\n\nclass EmployeeFinances extends EmployeeRewards {\n    public CalculatePay(Employee emp) {\n      return 10;\n    }\n}\n"))),(0,r.kt)(o.Z,{value:"orange",label:"\u274c",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/EmployeeFinances.js"',title:'"/src/EmployeeFinances.js"'},"interface IEmployeeRewards {\n  CalculateRewards(Employee emp)\n}\n\ninterface IEmployeeFinances extends IEmployeeRewards {\n  CalculatePay(Employee emp)\n}\n\nclass EmployeeRewards implements IEmployeeRewards {\n    public CalculateRewards(Employee emp) {\n      return 100;\n    }\n}\n\nclass EmployeeFinances implements IEmployeeFinances {\n    public CalculatePay(Employee emp) {\n      return 10;\n    }\n\n    // Now this class have to implement CalculateRewards to follow interface\n    public CalculateRewards(Employee emp) {\n      return 200;\n    }\n}\n"))),(0,r.kt)(o.Z,{value:"orange2",label:"\u2705",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/EmployeeFinances.js"',title:'"/src/EmployeeFinances.js"'},"interface IEmployeeRewards {\n  CalculateRewards(Employee emp)\n}\n\ninterface IEmployeeFinances extends IEmployeeRewards {\n  CalculatePay(Employee emp)\n}\n\n// REFACTOR: remove inheritance\nclass EmployeeFinancesForFTE implements IEmployeeFinances {\n    public CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 10;\n    }\n\n    public CalculateRewards(Employee emp) {\n      return 200;\n    }\n}\n\nclass EmployeeFinancesForPTE implements IEmployeeFinances {\n    public CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 5;\n    }\n\n    public CalculateRewards(Employee emp) {\n      return 150;\n    }\n}\n")))),(0,r.kt)("h2",{id:"isp"},"ISP"),(0,r.kt)("admonition",{title:"ISP",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"No client or class should be forced to depend on methods it does not use")),(0,r.kt)("p",null,"Requirements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"addition Shares of company beside salary pay"),(0,r.kt)("li",{parentName:"ul"},"start with C-Level employee first")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"apple",label:"\u274c",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/Employee.js"',title:'"/src/Employee.js"'},"enum EmployeeType {\n  FullTime,\n  PartTime,\n  Contractor,\n  CLevel\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/EmployeeFinances.js"',title:'"/src/EmployeeFinances.js"'},"interface IEmployeeRewards {\n  CalculateRewards(Employee emp)\n}\n\ninterface IEmployeeFinances extends IEmployeeRewards {\n  CalculatePay(Employee emp)\n  CalculateStockOptions(Employee emp)\n}\n\nclass EmployeeFinancesForFTE implements IEmployeeFinances {\n    public CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 10;\n    }\n\n    public CalculateRewards(Employee emp) {\n      return 200;\n    }\n}\n\nclass EmployeeFinancesForPTE implements IEmployeeFinances {\n    public CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 5;\n    }\n\n    public CalculateRewards(Employee emp) {\n      return 150;\n    }\n}\n\nclass EmployeeFinancesForCLevel implements IEmployeeFinances {\n    public CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 5;\n    }\n\n    public CalculateRewards(Employee emp) {\n      return 150;\n    }\n\n    public CalculateStockOptions(Employee emp) {\n      return 150;\n    }\n}\n")),(0,r.kt)("p",null,"  Violate ISP")),(0,r.kt)(o.Z,{value:"orange",label:"\u2705",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/EmployeeFinances.js"',title:'"/src/EmployeeFinances.js"'},"interface IEmployeeRewards {\n  CalculateRewards(Employee emp)\n}\n\ninterface IEmployeeFinances extends IEmployeeRewards {\n  CalculatePay(Employee emp)\n}\n\ninterface IStockOptions extends IEmployeeFinances {\n  CalculateStockOptions(Employee emp)\n}\n\nclass EmployeeFinancesForFTE implements IEmployeeFinances {\n    public CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 10;\n    }\n\n    public CalculateRewards(Employee emp) {\n      return 200;\n    }\n}\n\nclass EmployeeFinancesForPTE implements IEmployeeFinances {\n    public CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 5;\n    }\n\n    public CalculateRewards(Employee emp) {\n      return 150;\n    }\n}\n\nclass EmployeeFinancesForCLevel implements IStockOptions {\n    public CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 5;\n    }\n\n    public CalculateRewards(Employee emp) {\n      return 150;\n    }\n\n    public CalculateStockOptions(Employee emp) {\n      return 150;\n    }\n}\n")))),(0,r.kt)("h2",{id:"checklist"},"Checklist"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Is your project has Abstraction/Interface implementation?"),(0,r.kt)("li",{parentName:"ul"},"Is new requirement make you think of modifying the existing interface?"),(0,r.kt)("li",{parentName:"ul"},"Is all the classes implementing the interface needs the new requirements?"),(0,r.kt)("li",{parentName:"ul"},"If NO, then go for ISP implementation")))}y.isMDXComponent=!0}}]);