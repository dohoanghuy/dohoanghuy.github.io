"use strict";(self.webpackChunkdohoanghuy_github_io_docusaurus=self.webpackChunkdohoanghuy_github_io_docusaurus||[]).push([[815],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,y=p["".concat(s,".").concat(d)]||p[d]||m[d]||l;return n?a.createElement(y,o(o({ref:t},u),{},{components:n})):a.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(7462),r=n(7294),l=n(6010),o=n(2466),i=n(6550),s=n(1980),c=n(7392),u=n(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=m(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,c]=y({queryString:n,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),b=(()=>{const e=s??p;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),f(e)}),[c,f,l]),tabValues:l}}var b=n(2389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==i&&(p(t),s(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:m},o,{className:(0,l.Z)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function E(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",h.tabList)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function k(e){const t=(0,b.Z)();return r.createElement(E,(0,a.Z)({key:String(t)},e))}},2537:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),l=n(4866),o=n(5162);const i={description:"Create a doc page with rich content.",title:"Open closed principle",tags:["Solid"]},s="OCP - Open closed principle",c={unversionedId:"SOLID/open-closed-principle",id:"SOLID/open-closed-principle",title:"Open closed principle",description:"Create a doc page with rich content.",source:"@site/docs/02-SOLID/02-open-closed-principle.md",sourceDirName:"02-SOLID",slug:"/SOLID/open-closed-principle",permalink:"/docs/SOLID/open-closed-principle",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-SOLID/02-open-closed-principle.md",tags:[{label:"Solid",permalink:"/docs/tags/solid"}],version:"current",sidebarPosition:2,frontMatter:{description:"Create a doc page with rich content.",title:"Open closed principle",tags:["Solid"]},sidebar:"tutorialSidebar",previous:{title:"Single responsibility principle",permalink:"/docs/SOLID/single-responsibility-principle"},next:{title:"Liskov substitution principle",permalink:"/docs/SOLID/liskov-substitution-principle"}},u={},p=[{value:"OCP",id:"ocp",level:2},{value:"EMS Portal example",id:"ems-portal-example",level:3},{value:"Checklist",id:"checklist",level:2}],m={toc:p},d="wrapper";function y(e){let{components:t,...i}=e;return(0,r.kt)(d,(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ocp---open-closed-principle"},"OCP - Open closed principle"),(0,r.kt)("h2",{id:"ocp"},"OCP"),(0,r.kt)("admonition",{title:"OCP",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Software entities (class/module/method/...) should be open for extension and closed for modification")),(0,r.kt)("h3",{id:"ems-portal-example"},"EMS Portal example"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"apple",label:"\u274c",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/Employee.js"',title:'"/src/Employee.js"'},"enum EmployeeType {\n  FullTime,\n  PartTime,\n  Contractor\n}\n\nclass Employee {\n    public EmployeeType;\n    public TotalHoursWorked;\n\n    public Save(Employee emp) {}\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/EmployeeFinances.js"',title:'"/src/EmployeeFinances.js"'},"class EmployeeFinances {\n    \n    public CalculatePay(Employee emp) {\n\n      if (emp.EmployeeType === empType.FullTime) {\n        return emp.TotalHoursWorked * 10;\n      }\n\n      if (emp.EmployeeType === empType.PartTime) {\n        return emp.TotalHoursWorked * 5;\n      }\n\n      return 10;\n    }\n}\n"))),(0,r.kt)(o.Z,{value:"apple2",label:"\u274c",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"  Problem when adding new emplyee type => have to change ",(0,r.kt)("em",{parentName:"p"},"CalculatePay")," => have to rebuild/retest/redeploy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/EmployeeFinances.js"',title:'"/src/EmployeeFinances.js"'},"class EmployeeFinances {\n    \n    public CalculatePay(Employee emp) {\n      \n      if (emp.EmployeeType === empType.FullTime) {\n        return emp.TotalHoursWorked * 10;\n      }\n\n      if (emp.EmployeeType === empType.PartTime) {\n        return emp.TotalHoursWorked * 5;\n      }\n      \n      if (emp.EmployeeType === empType.Contractor) {\n        return emp.TotalHoursWorked * 5;\n      }\n\n      return 10;\n    }\n}\n")),(0,r.kt)("p",null,"  This violate OCP by overuse if-else condition")),(0,r.kt)(o.Z,{value:"orange",label:"\u2705",mdxType:"TabItem"},(0,r.kt)("p",null,"  Apply OOP principle to solve: Inheritance & Polymorphism"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/EmployeeFinances.js"',title:'"/src/EmployeeFinances.js"'},"class EmployeeFinances {\n    public CalculatePay(Employee emp) {\n      return 10;\n    }\n}\n\nclass EmployeeFinancesForFTE extends EmployeeFinances {\n    public override CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 10;\n    }\n}\n\nclass EmployeeFinancesForPTE extends EmployeeFinances {\n    public override CalculatePay(Employee emp) {\n      return emp.TotalHoursWorked * 5;\n    }\n}\n\nclass EmployeeFinancesForContractor extends EmployeeFinances {\n    public override CalculatePay(Employee emp) {\n      return 100;\n    }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/Main.js"',title:'"/src/Main.js"'},"  const Employee empFTE = new Employee();\n  const Employee empPTE = new Employee();\n\n  let totalPay;\n  let EmployeeFinances employeeFinances;\n\n  employeeFinances = new EmployeeFinances();\n  totalPay = employeeFinances.CalculatePay(empPTE);\n\n\n  employeeFinances = new EmployeeFinancesForFTE();\n  totalPay = employeeFinances.CalculatePay(empPTE);\n")),(0,r.kt)("p",null,"  Polymorphism:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Parent can play role of it's child object"),(0,r.kt)("li",{parentName:"ul"},"Parent object can hold reference of it's child object")))),(0,r.kt)("p",null,"NOTE: Modification means adding extra functionality, NOT fixing code and refactoring the code"),(0,r.kt)("p",null,"Class is OPEN: you can extend & create a subclasses from it"),(0,r.kt)("p",null,"Class is CLOSED: it's 100% ready to used by another classes, it's structure that wont change in the future"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example ocp",src:n(3338).Z,width:"1280",height:"720"})),(0,r.kt)("p",null,"If your component have many code flow or over usage of fails switch cases then apply."),(0,r.kt)("p",null,"The OCP means keep the change in the existing code as minumum as possible"),(0,r.kt)("h2",{id:"checklist"},"Checklist"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Identify the scope of OCP"),(0,r.kt)("li",{parentName:"ul"},"Extract the base class"),(0,r.kt)("li",{parentName:"ul"},"Define the child classes")))}y.isMDXComponent=!0},3338:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ocp1-ec2154e4e7e86a83b538cf1acf11642a.png"}}]);